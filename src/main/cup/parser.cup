/*
    This code is part of the compiler course in hua university
*/

import java_cup.runtime.Symbol;

//Terminal reserved words
terminal AND, FUN, NOTHING, VAR, CHAR, IF, OR, WHILE, DIV, INT;
terminal REF, DO, MOD, RETURN, ELSE, NOT, THEN;

//Terminal identifiers
terminal java.lang.String IDENTIFIER;

//Terminal Integers
terminal java.lang.Integer INT_LITERAL;

//Terminal operators
terminal PLUS, MINUS, MULTIPLY, DIVISION;
terminal NEQUAL, ASSIGN, LT, GT, LE, GE;

//Terminal spacers
terminal LPAREN, RPAREN, LBRACKET, RBRACKET;
terminal LCURLY, RCURLY, COMMA, SEMICOLON, COLON, PLIKE;

//Terminal for string
terminal java.lang.String STRING_LITERAL;

//Terminal for single constant characters
terminal CHAR_LITERAL;

non terminal program;
non terminal func_def;
non terminal header, local_def, block;
non terminal local_def_list;
non terminal fpar_def, ret_type;
non terminal fpar_def_list;
non terminal maybe_ref;
non terminal fpar_type, id_list;
non terminal data_type;
non terminal type, int_literal_list;



start with program;

program ::= func_def;

func_def ::= header local_def_list block;

local_def_list ::= /*Zero or more*/
                | local_def_list local_def
                ;

header ::= FUN IDENTIFIER LPAREN fpar_def fpar_def_list RPAREN COLON ret_type;
 

fpar_def_list ::= /*Empty */
                |fpar_def_list SEMICOLON fpar_def
                ;

fpar_def ::= maybe_ref IDENTIFIER id_list COLON fpar_type;

maybe_ref ::= /*Empty*/
            |REF
            ;

id_list ::= /*Empty*/ 
          |id_list COMMA IDENTIFIER
          ;  
    
data_type ::= INT
            | CHAR
            ;
        
type ::= data_type int_literal_list;

int_literal_list ::= /*Empty*/
                    |int_literal_list LBRACKET INT_LITERAL RBRACKET
                    ;

ret_type ::= data_type
            |NOTHING
            ;